name: Run Checks
run-name: Check ${{ github.sha }}

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  Style-Check:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

    - name: Install tools
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends yamllint

    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'

    - name: Create gradle.properties
      run: |
        mkdir -p ~/.gradle
        echo "RELEASE_STORE_FILE=notExisting.jks" >~/.gradle/gradle.properties
        echo "RELEASE_STORE_PASSWORD=unused" >>~/.gradle/gradle.properties
        echo "RELEASE_KEY_ALIAS=unused" >>~/.gradle/gradle.properties
        echo "RELEASE_KEY_PASSWORD=unused" >>~/.gradle/gradle.properties

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Verify Google Java format
      run: ./gradlew verifyGoogleJavaFormat

    - name: Check yaml style
      run: yamllint .

    - name: Format Java code
      if: ${{ (github.event_name == 'push') && (success() || failure()) }}
      run: ./gradlew googleJavaFormat

    - name: Create pull request
      if: ${{ (github.event_name == 'push') && (success() || failure()) }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        [[ -z "$(git status -s)" ]] && echo No changes && exit 0
        curr_branch="${{ github.head_ref || github.ref_name }}"
        new_branch="auto-format-$(git rev-parse HEAD | head -c 8)"
        author_name="$(git log -1 --pretty=format:'%an')"
        author_email="$(git log -1 --pretty=format:'%ae')"
        git checkout -b "$new_branch" && git merge "$curr_branch"
        git config user.name "$author_name"
        git config user.email "$author_email"
        git remote set-url origin "https://github.com/${{ github.repository }}"
        git commit -am 'Apply code formatting automatically from GitHub actions'
        git push origin "$new_branch"
        gh pr create -B "$curr_branch" -H "$new_branch" --title "Merge \`$new_branch\` into \`$curr_branch\`" \
        --body 'Apply code formatting [generated automatically]'

  Build-and-Test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: Style-Check

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'

    - name: Create KeyStore and gradle.properties
      run: |
        storePass=dummyPassword
        keyAlias=test
        keyPass=dummyPassword
        keytool -genkey -keystore keyStore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias "$keyAlias" \
        -dname "cn=Unknown, ou=Unknown, o=Unknown, c=Unknown" -storepass "$storePass" -keypass "$keyPass"
        mkdir -p ~/.gradle
        echo "RELEASE_STORE_FILE=../keyStore.jks" >~/.gradle/gradle.properties
        echo "RELEASE_STORE_PASSWORD=$storePass" >>~/.gradle/gradle.properties
        echo "RELEASE_KEY_ALIAS=$keyAlias" >>~/.gradle/gradle.properties
        echo "RELEASE_KEY_PASSWORD=$keyPass" >>~/.gradle/gradle.properties

    - name: Build
      run: |
        chmod +x gradlew
        ./gradlew build -x verifyGoogleJavaFormat

    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | \
        sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Test
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        script: ./gradlew connectedCheck
